package com.discovery.app.user.data;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.discovery.app.user.ui.model.AlbumResponseModel;

import feign.hystrix.FallbackFactory;

//@FeignClient(name = "album-ws" ,fallback=AlbumsFallback.class)
@FeignClient(name = "album-ws" ,fallbackFactory=AlbumsFallbackFactory.class)
public interface AlbumServiceClient {

    @GetMapping("/users/{id}/albums")
	public List<AlbumResponseModel> getAlbum(@PathVariable String id);
	
}

@Component
class AlbumsFallbackFactory implements FallbackFactory<AlbumServiceClient> {

	
	@Override
	public AlbumServiceClient create(Throwable cause) {
		// TODO Auto-generated method stub
		return null;
	}
}

class AlbumServiceClientFallback implements AlbumServiceClient
{
	Logger logger =LoggerFactory.getLogger(AlbumServiceClientFallback.class);
	
	private static final Throwable cause;
	
	@Override
	public List<AlbumResponseModel> getAlbum(String id) {
		return new ArrayList<>();
	}
}