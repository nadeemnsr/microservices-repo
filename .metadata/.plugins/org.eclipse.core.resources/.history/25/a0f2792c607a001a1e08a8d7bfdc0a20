package com.multithreading.concept;

import java.util.Random;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

public class BlockingQueueDemo {

	public static BlockingQueue<Integer> queue  = new ArrayBlockingQueue<>(10);
	public static void main(String[] args) {

	}

	private static void producer() throws InterruptedException
	{
		Random r =new Random();
		while(true)
		{
			queue.put(r.nextInt(10));
		}
		
	}
	
	private static void consumer()throws InterruptedException
	{
		Random r =new Random();
		while(true)
		{
			if(r.nextInt(10) == 0)
			{
				System.out.println("taking queue : "+queue.take());
			}
		}
	}
}
