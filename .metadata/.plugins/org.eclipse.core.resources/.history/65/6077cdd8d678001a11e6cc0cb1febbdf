package com.multithreading.concept;

import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class InturruptThreadDemo {

	public static void main(String[] args) throws InterruptedException {
		System.out.println("started");
		ExecutorService exe = Executors.newCachedThreadPool();

		Future<?> fut = exe.submit(() -> {

			Random r = new Random();

			if (Thread.currentThread().interrupted()) {
				System.out.println("interrupted");
			}
			System.out.println(Math.sin(r.nextDouble()));
		});

		t.start();
		t.interrupt();
		t.join();
		fut.cancel(false);
		System.out.println("finished");
	}

}
