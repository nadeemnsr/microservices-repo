<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.annotation.Generated"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="com.discovery.app.user.repository.UsersRepositoty"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.modelmapper.spi.MatchingStrategy"/>
<fullyQualifiedTypeName name="org.modelmapper.convention.MatchingStrategies"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
<fullyQualifiedTypeName name="com.discovery.app.user.ui.model.CreateUserResponseModel"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
<fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="com.discovery.app.user.ui.model.LoginRequestModel"/>
<fullyQualifiedTypeName name="javax.management.RuntimeErrorException"/>
<fullyQualifiedTypeName name="com.discovery.app.user.security.AuthenticationFilter"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="com.discovery.app.user.data.entity.UserEntity"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
<fullyQualifiedTypeName name="com.discovery.app.user.service.UserService"/>
<fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
<fullyQualifiedTypeName name="com.discovery.app.user.ui.model.UserDto"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
<fullyQualifiedTypeName name="org.apache.http.protocol.HTTP"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
<fullyQualifiedTypeName name="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="com.discovery.zull.gateway.security.AuthorizationFilter"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="com.design.factory.Computer"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="com.design.factory.object.ComputerFactory"/>
<fullyQualifiedTypeName name="com.design.factory.ComputerType"/>
<fullyQualifiedTypeName name="java.util.concurrent.ExecutorService"/>
<fullyQualifiedTypeName name="java.util.concurrent.Executors"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.util.concurrent.Callable"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
</qualifiedTypeNameHistroy>
